name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build - ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: dfrun
            archive_name: dfrun-linux-x86_64.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: dfrun
            archive_name: dfrun-macos-x86_64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: dfrun
            archive_name: dfrun-macos-arm64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: dfrun.exe
            archive_name: dfrun-windows-x86_64.zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Package Binary
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            7z a ../../../${{ matrix.platform.archive_name }} ${{ matrix.platform.binary_name }}
          else
            tar -czf ../../../${{ matrix.platform.archive_name }} ${{ matrix.platform.binary_name }}
          fi
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.archive_name }}
          path: ${{ matrix.platform.archive_name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-files
      - run: |
          sudo apt-get install -y tree 
          tree .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-files/*/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
